{
  "slug": "int-prod",
  "kube_cluster": {
    "config": {},
    "provider": "kind"
  },
  "target_summary": {
    "knative_services": [],
    "notebooks": [],
    "batteries": [
      {
        "id": "batt_01915c276f2e79da94c5b49aba972ab9",
        "type": "istio",
        "config": {
          "type": "istio",
          "namespace": "battery-istio",
          "pilot_image": "docker.io/istio/pilot:1.22.3-distroless",
          "namespace_override": null,
          "pilot_image_override": null
        },
        "group": "net_sec",
        "inserted_at": null,
        "updated_at": null
      },
      {
        "id": "batt_01915c276f2e766c902a6bf6bbe01bae",
        "type": "istio_gateway",
        "config": {
          "type": "istio_gateway",
          "proxy_image": "docker.io/istio/proxyv2:1.22.3-distroless",
          "proxy_image_override": null
        },
        "group": "net_sec",
        "inserted_at": null,
        "updated_at": null
      },
      {
        "id": "batt_01915c276f2e73ecbc1311a702392f68",
        "type": "battery_core",
        "config": {
          "type": "battery_core",
          "usage": "internal_prod",
          "cluster_type": "kind",
          "core_namespace": "battery-core",
          "base_namespace": "battery-base",
          "data_namespace": "battery-data",
          "ai_namespace": "battery-ai",
          "default_size": "medium",
          "cluster_name": "int-prod",
          "server_in_cluster": true,
          "install_id": "batt_01915c276f217198aea69956734ec170",
          "control_jwk": {
            "crv": "Ed25519",
            "d": "fNRfS8B-9jJPbwFgsWObzfpmtOGWKBJjRdmMR-LqGuI",
            "kty": "OKP",
            "x": "vJxSio6x6sWFNCWscLZaVF3gYYVQKWGNDuj_a7NU0bA"
          },
          "upgrade_days_of_week": [
            true,
            true,
            true,
            true,
            false,
            false,
            false
          ],
          "upgrade_start_hour": 18,
          "upgrade_end_hour": 23
        },
        "group": "magic",
        "inserted_at": null,
        "updated_at": null
      },
      {
        "id": "batt_01915c276f2e7b8f879a0298fa617d77",
        "type": "metallb",
        "config": {
          "type": "metallb",
          "controller_image": "quay.io/metallb/controller:v0.14.8",
          "speaker_image": "quay.io/metallb/speaker:v0.14.8",
          "frrouting_image": "quay.io/frrouting/frr:9.1.0",
          "enable_pod_monitor": false,
          "speaker_image_override": null,
          "controller_image_override": null,
          "frrouting_image_override": null
        },
        "group": "net_sec",
        "inserted_at": null,
        "updated_at": null
      },
      {
        "id": "batt_01915c276f2e71b384b8f557385b4105",
        "type": "traditional_services",
        "config": {
          "type": "traditional_services",
          "namespace": "battery-traditional",
          "namespace_override": null
        },
        "group": "devtools",
        "inserted_at": null,
        "updated_at": null
      },
      {
        "id": "batt_01915c276f2e7454b4e4ce9a4d4d07af",
        "type": "cloudnative_pg",
        "config": {
          "type": "cloudnative_pg",
          "image": "ghcr.io/cloudnative-pg/cloudnative-pg:1.23.2",
          "image_override": null
        },
        "group": "data",
        "inserted_at": null,
        "updated_at": null
      },
      {
        "id": "batt_01915c276f2e7136a962b25dd1d66459",
        "type": "stale_resource_cleaner",
        "config": {
          "type": "stale_resource_cleaner",
          "delay": 900000,
          "delay_override": null
        },
        "group": "magic",
        "inserted_at": null,
        "updated_at": null
      }
    ],
    "traditional_services": [
      {
        "id": null,
        "name": "home-base",
        "ports": [
          {
            "name": "http",
            "protocol": "http2",
            "number": 4000
          }
        ],
        "inserted_at": null,
        "updated_at": null,
        "env_values": [
          {
            "name": "SECRET_KEY_BASE",
            "value": "EGIJ4NAVXT2XG2XCZRIZI33NHYBLXG3FSWODKIRZHJSX76OEQQQHUWXGA26FRSKS",
            "source_name": null,
            "source_type": "value",
            "source_key": null,
            "source_optional": false
          },
          {
            "name": "POSTGRES_DB",
            "value": "home-base",
            "source_name": null,
            "source_type": "value",
            "source_key": null,
            "source_optional": false
          },
          {
            "name": "POSTGRES_USER",
            "value": null,
            "source_name": "cloudnative-pg.pg-home-base.home-base",
            "source_type": "secret",
            "source_key": "username",
            "source_optional": false
          },
          {
            "name": "POSTGRES_PASSWORD",
            "value": null,
            "source_name": "cloudnative-pg.pg-home-base.home-base",
            "source_type": "secret",
            "source_key": "password",
            "source_optional": false
          },
          {
            "name": "POSTGRES_HOST",
            "value": null,
            "source_name": "cloudnative-pg.pg-home-base.home-base",
            "source_type": "secret",
            "source_key": "hostname",
            "source_optional": false
          }
        ],
        "num_instances": 1,
        "virtual_size": "medium",
        "cpu_requested": 4000,
        "cpu_limits": 4000,
        "memory_requested": 8589934592,
        "memory_limits": 8589934592,
        "project_id": null,
        "init_containers": [
          {
            "args": [
              "home_base_init"
            ],
            "command": [
              "/app/bin/start"
            ],
            "name": "init",
            "image": "public.ecr.aws/batteries-included/home-base:latest",
            "env_values": [],
            "mounts": [
              {
                "read_only": true,
                "volume_name": "home-base-specs",
                "mount_path": "/etc/init-config/"
              }
            ]
          }
        ],
        "containers": [
          {
            "args": null,
            "command": null,
            "name": "home-base",
            "image": "public.ecr.aws/batteries-included/home-base:latest",
            "env_values": [],
            "mounts": []
          }
        ],
        "volumes": [
          {
            "name": "home-base-specs",
            "type": "config_map",
            "config": {
              "name": "home-base-specs",
              "type": "config_map",
              "optional": true,
              "default_mode": null
            }
          }
        ],
        "kube_internal": false,
        "kube_deployment_type": "deployment"
      }
    ],
    "postgres_clusters": [
      {
        "id": null,
        "name": "controlserver",
        "type": "internal",
        "database": {
          "name": "control",
          "owner": "battery-control-user"
        },
        "users": [
          {
            "position": null,
            "username": "battery-control-user",
            "roles": [
              "createdb",
              "login"
            ],
            "credential_namespaces": [
              "battery-core"
            ]
          }
        ],
        "storage_class": null,
        "inserted_at": null,
        "updated_at": null,
        "num_instances": 1,
        "virtual_size": "medium",
        "password_versions": [
          {
            "version": 1,
            "username": "battery-control-user",
            "password": "6EZU7PBTHWJUTOLQ4C674ROX"
          }
        ],
        "cpu_requested": 4000,
        "cpu_limits": 4000,
        "memory_requested": 8589934592,
        "memory_limits": 8589934592,
        "project_id": null,
        "storage_size": 68719476736,
        "virtual_storage_size_range_value": 470590976688
      },
      {
        "id": null,
        "name": "home-base",
        "type": "internal",
        "database": {
          "name": "home-base",
          "owner": "home-base"
        },
        "users": [
          {
            "position": null,
            "username": "home-base",
            "roles": [
              "createdb",
              "login"
            ],
            "credential_namespaces": [
              "battery-traditional"
            ]
          }
        ],
        "storage_class": null,
        "inserted_at": null,
        "updated_at": null,
        "num_instances": 1,
        "virtual_size": "medium",
        "password_versions": [
          {
            "version": 1,
            "username": "home-base",
            "password": "XVL5LWLGJ4ONYPQM2CZV5J5L"
          }
        ],
        "cpu_requested": 4000,
        "cpu_limits": 4000,
        "memory_requested": 8589934592,
        "memory_limits": 8589934592,
        "project_id": null,
        "storage_size": 68719476736,
        "virtual_storage_size_range_value": 470590976688
      }
    ],
    "redis_instances": [],
    "projects": [],
    "ferret_services": [],
    "ip_address_pools": [],
    "stable_versions_report": null,
    "captured_at": null,
    "install_status": null
  },
  "initial_resources": {
    "/cluster_role_binding/batteries_included_bootstrap": {
      "apiVersion": "rbac.authorization.k8s.io/v1",
      "kind": "ClusterRoleBinding",
      "metadata": {
        "annotations": {
          "battery/hash": "O3EGDGQ5G6464J2XKQMXU3FQSOWOLR5SWYYL6XBI4RG2P7JM75WA===="
        },
        "labels": {
          "app": "battery-core",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "battery-core",
          "app.kubernetes.io/version": "latest",
          "battery/app": "battery-core",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "battery/owner": "batt_01915c276f2e73ecbc1311a702392f68",
          "version": "latest"
        },
        "name": "batteries-included:bootstrap"
      },
      "roleRef": {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "ClusterRole",
        "name": "cluster-admin"
      },
      "subjects": [
        {
          "kind": "ServiceAccount",
          "name": "bootstrap",
          "namespace": "battery-core"
        }
      ]
    },
    "/config_map/home_base_specs": {
      "apiVersion": "v1",
      "data": {
        "damian.install.json": "{\n  \"id\": \"batt_01915c276f2274e9a14e4b22eaa23b61\",\n  \"usage\": \"development\",\n  \"default_size\": \"small\",\n  \"control_jwk\": {\n    \"crv\": \"Ed25519\",\n    \"d\": \"mym_2TfOv9ZeYPg-KdmkzPCjNSkGJlYZNyb9TNAoIng\",\n    \"kty\": \"OKP\",\n    \"x\": \"fQtxcZWYkE3yAdMxGwtqbHnN4VmEU0AwdP8YX7r0hI4\"\n  },\n  \"inserted_at\": null,\n  \"updated_at\": null,\n  \"slug\": \"damian\",\n  \"kube_provider\": \"aws\",\n  \"team_id\": \"batt_01915c276ecb72d1a5467503d5521461\",\n  \"kube_provider_config\": {},\n  \"user_id\": null\n}",
        "dev.install.json": "{\n  \"id\": \"batt_01915c276ecb710d89979004adcff111\",\n  \"usage\": \"internal_dev\",\n  \"default_size\": \"tiny\",\n  \"control_jwk\": {\n    \"crv\": \"Ed25519\",\n    \"d\": \"HMfTiH9ujRcBd6vRCvGQnLRySORAOXuFWa2sde82ocQ\",\n    \"kty\": \"OKP\",\n    \"x\": \"9N3gfyBbP-AiJmJZcP5PK0xnd4w1Ef5eXWyIfd8UU6g\"\n  },\n  \"inserted_at\": null,\n  \"updated_at\": null,\n  \"slug\": \"dev\",\n  \"kube_provider\": \"kind\",\n  \"team_id\": \"batt_01915c276ecb72d1a5467503d5521461\",\n  \"kube_provider_config\": {},\n  \"user_id\": null\n}",
        "elliott.install.json": "{\n  \"id\": \"batt_01915c276f21751c899aba48009e91c6\",\n  \"usage\": \"development\",\n  \"default_size\": \"small\",\n  \"control_jwk\": {\n    \"crv\": \"Ed25519\",\n    \"d\": \"H6gA9NGbgfGhxQZh_c-U1SBWBuBMiQibc77dWrpl0TU\",\n    \"kty\": \"OKP\",\n    \"x\": \"xnDAEMBJXjR3IGZFnhDlM-BxpemTAzTg-6lyJjLvtKg\"\n  },\n  \"inserted_at\": null,\n  \"updated_at\": null,\n  \"slug\": \"elliott\",\n  \"kube_provider\": \"aws\",\n  \"team_id\": \"batt_01915c276ecb72d1a5467503d5521461\",\n  \"kube_provider_config\": {},\n  \"user_id\": null\n}",
        "int-prod.install.json": "{\n  \"id\": \"batt_01915c276f217198aea69956734ec170\",\n  \"usage\": \"internal_prod\",\n  \"default_size\": \"medium\",\n  \"control_jwk\": {\n    \"crv\": \"Ed25519\",\n    \"d\": \"fNRfS8B-9jJPbwFgsWObzfpmtOGWKBJjRdmMR-LqGuI\",\n    \"kty\": \"OKP\",\n    \"x\": \"vJxSio6x6sWFNCWscLZaVF3gYYVQKWGNDuj_a7NU0bA\"\n  },\n  \"inserted_at\": null,\n  \"updated_at\": null,\n  \"slug\": \"int-prod\",\n  \"kube_provider\": \"kind\",\n  \"team_id\": \"batt_01915c276ecb72d1a5467503d5521461\",\n  \"kube_provider_config\": {},\n  \"user_id\": null\n}",
        "int-test.install.json": "{\n  \"id\": \"batt_01915c276f217badb49b0d0b7a37dbba\",\n  \"usage\": \"internal_int_test\",\n  \"default_size\": \"medium\",\n  \"control_jwk\": {\n    \"crv\": \"Ed25519\",\n    \"d\": \"ZlmXfogKG6HivzYrxhhkoQmNl6Vk9yQ8YsFOegljUCw\",\n    \"kty\": \"OKP\",\n    \"x\": \"EFEEMw3aG0QNPTJtgl6PKoUklnNJ7jaN5vpUwqTRXyo\"\n  },\n  \"inserted_at\": null,\n  \"updated_at\": null,\n  \"slug\": \"int-test\",\n  \"kube_provider\": \"kind\",\n  \"team_id\": \"batt_01915c276ecb72d1a5467503d5521461\",\n  \"kube_provider_config\": {},\n  \"user_id\": null\n}",
        "jason.install.json": "{\n  \"id\": \"batt_01915c276f22767f9d7606feedb67108\",\n  \"usage\": \"development\",\n  \"default_size\": \"small\",\n  \"control_jwk\": {\n    \"crv\": \"Ed25519\",\n    \"d\": \"Gy0kIWw5w2_QWD01UbrcSJhfcepqYbxfM5UKLbmWntM\",\n    \"kty\": \"OKP\",\n    \"x\": \"DX3UzWXG4cmm1YWJzbQJnIO5d-fCdIBGMILC0hguS3s\"\n  },\n  \"inserted_at\": null,\n  \"updated_at\": null,\n  \"slug\": \"jason\",\n  \"kube_provider\": \"aws\",\n  \"team_id\": \"batt_01915c276ecb72d1a5467503d5521461\",\n  \"kube_provider_config\": {},\n  \"user_id\": null\n}",
        "local.install.json": "{\n  \"id\": \"batt_01915c276f21755696d4a49dac1f68b5\",\n  \"usage\": \"development\",\n  \"default_size\": \"tiny\",\n  \"control_jwk\": {\n    \"crv\": \"Ed25519\",\n    \"d\": \"qRevE_6e_2UtDTWMwcFsqPUVewiQ0n3Xc1JPPM3ud_Y\",\n    \"kty\": \"OKP\",\n    \"x\": \"NyZtMQRCYXtM9d0B-ADB6nFOgqB7WR_J3JIH8LAz31o\"\n  },\n  \"inserted_at\": null,\n  \"updated_at\": null,\n  \"slug\": \"local\",\n  \"kube_provider\": \"kind\",\n  \"team_id\": \"batt_01915c276ecb72d1a5467503d5521461\",\n  \"kube_provider_config\": {},\n  \"user_id\": null\n}",
        "maurer.install.json": "{\n  \"id\": \"batt_01915c276f227cef97df49309774c8d7\",\n  \"usage\": \"development\",\n  \"default_size\": \"small\",\n  \"control_jwk\": {\n    \"crv\": \"Ed25519\",\n    \"d\": \"o3XaURTIKdWsEsFLdh23j9HDW5epGc4Z6tobRf-olPI\",\n    \"kty\": \"OKP\",\n    \"x\": \"Q3pUukom2OEpov0XBqdBcPkCtIlLIe_xjoYo3g9dSwM\"\n  },\n  \"inserted_at\": null,\n  \"updated_at\": null,\n  \"slug\": \"maurer\",\n  \"kube_provider\": \"aws\",\n  \"team_id\": \"batt_01915c276ecb72d1a5467503d5521461\",\n  \"kube_provider_config\": {},\n  \"user_id\": null\n}",
        "team.json": "{\n  \"id\": \"batt_01915c276ecb72d1a5467503d5521461\",\n  \"name\": \"Batteries Included Team\",\n  \"inserted_at\": null,\n  \"updated_at\": null,\n  \"op_email\": \"elliott@batteriesincl.com\"\n}"
      },
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "battery/hash": "OWBJ3ZV3QIC2MLHL5O6O72FQHYX6QRGS4AMQT6PNDJMIRV2W6SOQ===="
        },
        "labels": {
          "app": "traditional-services",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "traditional-services",
          "app.kubernetes.io/version": "latest",
          "battery/app": "traditional-services",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "battery/owner": "batt_01915c276f2e71b384b8f557385b4105",
          "version": "latest"
        },
        "name": "home-base-specs",
        "namespace": "battery-traditional"
      }
    },
    "/job/bootstrap": {
      "apiVersion": "batch/v1",
      "kind": "Job",
      "metadata": {
        "annotations": {
          "battery/hash": "3C2LWCP3Y74BRNKXFJYP2CAH3YS2353SFL4KB2G2SI7BWNCOE55Q===="
        },
        "labels": {
          "app": "battery-core",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "battery-core",
          "app.kubernetes.io/version": "latest",
          "battery/app": "battery-core",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "battery/owner": "batt_01915c276f2e73ecbc1311a702392f68",
          "sidecar.istio.io/inject": "false",
          "version": "latest"
        },
        "name": "bootstrap",
        "namespace": "battery-core"
      },
      "spec": {
        "backoffLimit": 6,
        "completions": 1,
        "parallelism": 1,
        "template": {
          "metadata": {
            "annotations": {},
            "labels": {
              "app": "battery-core",
              "app.kubernetes.io/component": "bootstrap",
              "app.kubernetes.io/managed-by": "batteries-included",
              "app.kubernetes.io/name": "battery-core",
              "app.kubernetes.io/version": "latest",
              "battery/app": "battery-core",
              "battery/component": "bootstrap",
              "battery/managed": "true",
              "battery/managed.indirect": "true",
              "battery/owner": "batt_01915c276f2e73ecbc1311a702392f68",
              "component": "bootstrap",
              "sidecar.istio.io/inject": "false",
              "version": "latest"
            }
          },
          "spec": {
            "automountServiceAccountToken": true,
            "containers": [
              {
                "env": [
                  {
                    "name": "RELEASE_COOKIE",
                    "value": "A7UCKFK2HBNHWH73J4T4NFW6NF33LCGAI3CT7VQAZL3BZ5LVQVT5KVFFAR5PGT64"
                  },
                  {
                    "name": "RELEASE_DISTRIBUTION",
                    "value": "none"
                  },
                  {
                    "name": "BOOTSTRAP_SUMMARY_PATH",
                    "value": "/var/run/secrets/summary/summary.json"
                  }
                ],
                "image": "public.ecr.aws/batteries-included/kube-bootstrap:latest",
                "imagePullPolicy": "IfNotPresent",
                "name": "bootstrap",
                "volumeMounts": [
                  {
                    "mountPath": "/var/run/secrets/summary",
                    "name": "summary"
                  }
                ]
              }
            ],
            "restartPolicy": "OnFailure",
            "serviceAccount": "bootstrap",
            "serviceAccountName": "bootstrap",
            "tolerations": [
              {
                "key": "CriticalAddonsOnly",
                "operator": "Exists"
              }
            ],
            "volumes": [
              {
                "name": "summary",
                "secret": {
                  "secretName": "initial-target-summary"
                }
              }
            ]
          }
        }
      }
    },
    "/namespace/battery_core": {
      "apiVersion": "v1",
      "kind": "Namespace",
      "metadata": {
        "annotations": {
          "battery/hash": "QMOKJFOEVUWLS36DAJ7GCLC4OLO4RHBTV5PIU3MUH2HGG46YABMQ===="
        },
        "labels": {
          "app": "battery-core",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "battery-core",
          "app.kubernetes.io/version": "latest",
          "battery/app": "battery-core",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "battery/owner": "batt_01915c276f2e73ecbc1311a702392f68",
          "istio-injection": "enabled",
          "version": "latest"
        },
        "name": "battery-core"
      }
    },
    "/namespace/battery_traditional": {
      "apiVersion": "v1",
      "kind": "Namespace",
      "metadata": {
        "annotations": {
          "battery/hash": "NLXODDQ4PRPASJCG5TOO6A7673KQ6ZXKFRF32QOVKCQE5HT7JCNA===="
        },
        "labels": {
          "app": "traditional-services",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "traditional-services",
          "app.kubernetes.io/version": "latest",
          "battery/app": "traditional-services",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "battery/owner": "batt_01915c276f2e71b384b8f557385b4105",
          "istio-injection": "enabled",
          "version": "latest"
        },
        "name": "battery-traditional"
      }
    },
    "/service_account/bootstrap": {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "annotations": {
          "battery/hash": "RBNWL2VFDMDIE5TWHEEHNBJXPL6UIX5I45K3C245Z6E4FLOSLO7Q===="
        },
        "labels": {
          "app": "battery-core",
          "app.kubernetes.io/managed-by": "batteries-included",
          "app.kubernetes.io/name": "battery-core",
          "app.kubernetes.io/version": "latest",
          "battery/app": "battery-core",
          "battery/managed": "true",
          "battery/managed.direct": "true",
          "battery/owner": "batt_01915c276f2e73ecbc1311a702392f68",
          "version": "latest"
        },
        "name": "bootstrap",
        "namespace": "battery-core"
      }
    }
  }
}