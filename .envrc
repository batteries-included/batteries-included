export KERL_CONFIGURE_OPTIONS="--without-javac --without-wx --without-odbc"
export KERL_BUILD_DOCS="yes"
export ERL_AFLAGS="-kernel shell_history enabled"

ROOT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)
export PATH="$ROOT_DIR/bin:$PATH"

setup_locales() {
    # These lang settigs are the same as the
    # locales used in our Docker image builds.
    export_and_echo_if_not_same "LANG" "en_US.UTF-8"
    export_and_echo_if_not_same "LC_ALL" "en_US.UTF-8"
    export_and_echo_if_not_same "LANGUAGE" "en_US:en"
}

export_and_echo_if_not_same() {
    local var_name="$1"
    local expected_value="$2"

    if [[ "${!var_name}" != "$expected_value" ]]; then
        echo "Setting $var_name to $expected_value"
    fi

    export "$var_name"="$expected_value"
}

setup_java() {
    # If there is a ZSH_VERSION environment variable, then we are in ZSH.
    if [[ -n "${ZSH_VERSION:-}" ]]; then
        # Check if ~/.asdf/plugins/java/set-java-home.zsh exists.
        if [[ -f "${HOME}/.asdf/plugins/java/set-java-home.zsh" ]]; then
            # Source it to set JAVA_HOME.
            source "${HOME}/.asdf/plugins/java/set-java-home.zsh"
        fi
    else
        # If we are not in ZSH, then we are in BASH or another shell.
        # Check if ~/.asdf/plugins/java/set-java-home.bash exists.
        if [[ -f "${HOME}/.asdf/plugins/java/set-java-home.bash" ]]; then
            # Source it to set JAVA_HOME.
            source "${HOME}/.asdf/plugins/java/set-java-home.bash"
        fi
    fi
}

get_asdf_plugins_required() {
    # Extract the plugins from .tool-versions
    awk '{print $1}' "${ROOT_DIR}/.tool-versions" | sort -u
}

setup_asdf_golang() {
    export ASDF_GOLANG_MOD_VERSION_ENABLED=false
}

setup_asdf_plugins() {
    local plugins_required
    plugins_required=$(get_asdf_plugins_required)

    local installed_plugins
    installed_plugins=$(asdf plugin list 2>/dev/null | awk '{print $1}')

    # Check if the plugin is already installed
    local plugin
    for plugin in $plugins_required; do
        if [[ ! "$installed_plugins" =~ "$plugin" ]]; then
            echo "Adding asdf plugin: $plugin"
            asdf plugin add "$plugin" &>/dev/null || {
                echo "Failed to add asdf plugin: $plugin"
                return 1
            }
        fi
    done
}

setup_asdf_versions() {
    asdf install &>/dev/null || {
        echo "Failed to install asdf versions."
        return 1
    }
}

setup_asdf() {
    if command -v asdf &>/dev/null; then
        setup_asdf_golang
        setup_asdf_plugins
        setup_asdf_versions
    else
        echo "Warning: asdf not found in PATH. Skipping asdf initialization."
    fi
}

clean_bix_temp_builds() {
    # Call bix go-clean-build to make sure that there aren't too many
    # bi builds left lying around.
    bix go clean-build
}

setup_locales
setup_java
setup_asdf

clean_bix_temp_builds

source_env_if_exists .env
