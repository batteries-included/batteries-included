version: 2

builds:
  - binary: bi
    dir: bi
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64

    tags:
      - netgo
      - osusergo
      - static_build

    flags:
      - -trimpath

    ldflags:
      - -w -s -X 'bi/pkg.Version={{.Version}}'

    hooks:
      post: ./bin/clean-tmp
upx:
  - enabled: true
    goos:
      - linux
    compress: '9'
    lzma: true
  - enabled: true
    goos:
      - windows
    goarch:
      - amd64
    compress: '9'
    lzma: true
archives:
  - formats: ['tar.gz']
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_ {{- title .Os }}_ {{- if eq .Arch "amd64" }}x86_64 {{-
      else if eq .Arch "386" }}i386 {{- else }}{{ .Arch }}{{ end }} {{- if .Arm
      }}v{{ .Arm }}{{ end }}

    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: ['zip']
changelog:
  sort: asc
  filters:
    exclude:
      # Docs are pushed on the master branch to netlify
      # don't include them in the changelog
      - '^docs:'
  groups:
    - title: New Features
      regexp: '^.*feat[(\w)]*:+.*$'
      order: 100
    - title: Bug Fixes
      regexp: '^.*fix[(\w)]*:+.*$'
      order: 110
    - title: Refactors/Improvements
      regexp: '^.*refactor[(\w)]*:+.*$'
      order: 120
    - title: Performance
      regexp: '^.*perf[(\w)]*:+.*$'
      order: 130
    - title: Style
      regexp: '^.*style[(\w)]*:+.*$'
      order: 140
    - title: Tests
      regexp: '^.test|tests|testing[(\w)]*:+.*$'
      order: 150
    - title: Build/CI
      regexp: '^.*build|ci[(\w)]*:+.*$'
      order: 160
    - title: Chore
      regexp: '^.*chore[(\w)]*:+.*$'
      order: 170
report_sizes: true
snapshot:
  version_template: '{{ .Version }}-{{.ShortCommit}}'
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
