---
name: BIX Docker

'on':
  push:
    branches:
      - master
    tags:
      - '*'

  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - labeled
      - reopened

permissions:
  id-token: write
  contents: read
  packages: write

defaults:
  run:
    shell: bash

# only allow 1 run for PRs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'master') }}

jobs:
  build-images:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      needs-archive: 'false'
      artifact-id: 0
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false

      - name: Setup ASDF
        uses: ./.github/actions/setup-asdf

      - id: additional-setup
        run: |
          echo "version=$(bin/bix docker get-image-tag)" >> "$GITHUB_OUTPUT"
          echo "image_tar=${{ runner.temp }}/bi_images.tar" >> "$GITHUB_ENV"

      - name: Login to GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Ensure base images are present
        run: bin/bix docker ensure-base-images

      - name: Build control-server image
        run: bin/bix docker build-image control-server
      - name: Build home-base image
        run: bin/bix docker build-image home-base
      - name: Build kube-bootstrap image
        run: bin/bix docker build-image kube-bootstrap
      - name: Build pastebin image
        run: bin/bix docker build-image pastebin

      - name: Determine if we need to save / upload
        if:
          ${{ (github.event_name == 'pull_request' &&
          contains(github.event.pull_request.labels.*.name, 'int-test')) ||
          (github.ref == 'refs/heads/master') || startsWith(github.ref,
          'refs/tags/') }}
        run: echo "needs-archive=true" >> "$GITHUB_ENV"

      - name: Save images
        if: ${{ fromJSON(env.needs-archive) }}
        run: bin/bix docker save-images "${{ env.image_tar }}"

      - name: Upload image archive
        if: ${{ fromJSON(env.needs-archive) }}
        id: upload-archive
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: bi-image-tar-${{ github.run_id }}
          overwrite: true
          retention-days: 1
          if-no-files-found: error
          path: ${{ env.image_tar }}

      - name: Set artifact ID
        if: ${{ fromJSON(env.needs-archive) }}
        env:
          new-artifact-id: ${{ steps.upload-archive.outputs.artifact-id }}
        run: echo "artifact-id=${{ env.new-artifact-id }}" >> "$GITHUB_ENV"
    outputs:
      bi-image-tar-artifact-id: ${{ env.artifact-id }}
      bi-image-tar-artifact-name: bi-image-tar-${{ github.run_id }}
      version: ${{ steps.additional-setup.outputs.version }}

  integration-tests:
    needs: build-images
    # run on PRs if labeled
    # always run on push to master or tag
    if:
      ${{ (github.event_name == 'pull_request' &&
      contains(github.event.pull_request.labels.*.name, 'int-test')) ||
      (github.ref == 'refs/heads/master') || startsWith(github.ref,
      'refs/tags/') }}
    uses: ./.github/workflows/int_test.yml
    secrets: inherit
    with:
      bi-image-artifact-id:
        ${{ needs.build-images.outputs.bi-image-tar-artifact-id }}
      bi-image-artifact-name:
        ${{ needs.build-images.outputs.bi-image-tar-artifact-name }}
      version: ${{ needs.build-images.outputs.version }}

  push-images:
    needs:
      - build-images
      - integration-tests
    # push images on tag or push to master
    if:
      ${{ (github.ref == 'refs/heads/master' || startsWith(github.ref,
      'refs/tags/')) && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false

      - name: Login to GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Load pre-built images
        uses: ./.github/actions/restore-images
        with:
          file: bi_images.tar
          artifact-id:
            ${{ needs.build-images.outputs.bi-image-tar-artifact-id }}
          artifact-name:
            ${{ needs.build-images.outputs.bi-image-tar-artifact-name }}

      # set ADDITIONAL_TAGS to either latest or the current tag
      - if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo "ADDITIONAL_TAGS=latest" >> "$GITHUB_ENV"

      - if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          # Copy the refname into a env var
          # Github will sanitize the input to make sure that it
          # isn't malicious
          GH_REF_NAME: ${{ github.ref_name }}
        run: |
          echo "ADDITIONAL_TAGS=${GH_REF_NAME}" >> "$GITHUB_ENV"

      - name: Push to GHCR
        run: bin/bix docker push-images ${{ env.ADDITIONAL_TAGS }}
