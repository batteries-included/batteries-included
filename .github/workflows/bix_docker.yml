name: BIX Docker

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

permissions:
  id-token: write
  contents: read

env:
  ECR_ROLE: arn:aws:iam::037532365270:role/GHA-Main-ECR-PowerUser
  REGISTRY_ALIAS: p2f3z8m1

jobs:
  build-images:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Setup ASDF
        uses: asdf-vm/actions/setup@v3
      - name: Cache ASDF
        uses: actions/cache@v4
        id: asdf-cache
        with:
          # https://github.com/asdf-vm/asdf/blob/master/.gitignore
          path: |
            ~/.asdf/installs
            ~/.asdf/plugins
            ~/.asdf/shims
          key: ${{ runner.os }}-asdf-tools-${{ hashFiles('.tool-versions') }}
          restore-keys: ${{ runner.os }}-asdf-tools-

      - name: Install ASDF Tools
        uses: asdf-vm/actions/install@v3
        # See https://github.com/asdf-vm/actions/issues/445
        if: ${{ steps.asdf-cache.outputs.cache-hit != 'true' }}
        with:
          asdf_branch: v0.14.1

      - name: Reshim ASDF
        shell: bash
        run: asdf reshim
      - name: Configure builder
        run: >-
          docker buildx create --name container --driver docker-container --use

      # Exposes ACTIONS_* variables so that they can be used for docker caching
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3

      - name: Build control-server image
        run: bin/bix build-image control-server
      - name: Build home-base image
        run: bin/bix build-image home-base
      - name: Build kube-bootstrap image
        run: bin/bix build-image kube-bootstrap
      - name: Build pastebin image
        run: bin/bix build-image pastebin

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        if:
          ${{ (github.ref == 'refs/heads/master' && github.event_name ==
          'push')}}
        with:
          aws-region: us-east-1
          role-to-assume: ${{ env.ECR_ROLE }}
      - name: Login to Amazon ECR
        id: login-ecr
        if:
          ${{ (github.ref == 'refs/heads/master' && github.event_name ==
          'push')}}
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      - name: Push latest to ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        if:
          ${{ (github.ref == 'refs/heads/master' && github.event_name ==
          'push')}}
        run: bin/bix push-images "$REGISTRY/$REGISTRY_ALIAS" latest

      - name: Push tag to ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        if:
          ${{ (startsWith(github.ref, 'refs/tags/') && github.event_name ==
          'push')}}
        run:
          bin/bix push-images "$REGISTRY/$REGISTRY_ALIAS" ${{ github.ref_name }}
