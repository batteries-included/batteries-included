---
name: BIX Docker

'on':
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

permissions:
  id-token: write
  contents: read
  packages: write

env:
  PUSH: 'false'

defaults:
  run:
    shell: bash

jobs:
  build-images:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup ASDF
        uses: ./.github/actions/setup-asdf

      - name: Determine whether to push images / tags / cache
        if:
          ${{ (github.ref == 'refs/heads/master' || startsWith(github.ref,
          'refs/tags/')) && github.event_name == 'push' }}
        run: |
          echo "PUSH=true" >> "$GITHUB_ENV"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Ensure base images are present
        run: bin/bix ensure-base

      - name: Build control-server image
        run: bin/bix build-image control-server
      - name: Build home-base image
        run: bin/bix build-image home-base
      - name: Build kube-bootstrap image
        run: bin/bix build-image kube-bootstrap
      - name: Build pastebin image
        run: bin/bix build-image pastebin

      # set ADDITIONAL_TAGS to either latest or the current tag
      - if: ${{ fromJSON(env.PUSH) && !startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo "ADDITIONAL_TAGS=latest" >> "$GITHUB_ENV"

      - if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo "ADDITIONAL_TAGS=${GH_REF_NAME}" >> "$GITHUB_ENV"
        env:
          # Copy the refname into a env var
          # Github will sanitize the input to make sure that it
          # isn't malicious
          GH_REF_NAME: ${{ github.ref_name }}

      - name: Push to GHCR
        if: ${{ fromJSON(env.PUSH) }}
        run:
          bin/bix push-images "ghcr.io/batteries-included" ${{
          env.ADDITIONAL_TAGS }}
