name: Nix

on:
  push:
    branches:
      - master
      - gh-readonly-queue/master/**
  pull_request:
    branches:
      - master

permissions:
  id-token: write
  contents: read

env:
  ECR_ROLE: arn:aws:iam::037532365270:role/GHA-Main-ECR-PowerUser
  REGISTRY_ALIAS: p2f3z8m1

jobs:
  pastebin:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v15
        with:
          name: batteries-included
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush:
            ${{ !(github.ref == 'refs/heads/master' && github.event_name ==
            'push') }}
      - name: Run the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v7
      - run: nix build .#pastebin -L
      - run: nix build .#pastebin-container -L
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ env.ECR_ROLE }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      - name: Push image to ECR
        if: ${{ (github.ref == 'refs/heads/master' && github.event_name == 'push') }}
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: pastebin
        run: |
          docker load < ./result
          TAG=$(docker images "$REPOSITORY" --format '{{ .Tag }}')
          INPUT="$REPOSITORY:$TAG"
          OUTPUT="$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$TAG"
          docker tag "$INPUT" "$OUTPUT"
          docker push "$OUTPUT"
          OUTPUT="$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:latest"
          docker tag "$INPUT" "$OUTPUT"
          docker push "$OUTPUT"

  control-server:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v15
        with:
          name: batteries-included
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush:
            ${{ !(github.ref == 'refs/heads/master' && github.event_name ==
            'push') }}
      - name: Run the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v7
      - run: nix build .#control-server -L
      - run: nix build .#control-server-container -L
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ env.ECR_ROLE }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      - name: Push image to ECR
        if: ${{ (github.ref == 'refs/heads/master' && github.event_name == 'push') }}
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: control-server
        run: |
          docker load < ./result
          TAG=$(docker images "$REPOSITORY" --format '{{ .Tag }}')
          INPUT="$REPOSITORY:$TAG"
          OUTPUT="$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$TAG"
          docker tag "$INPUT" "$OUTPUT"
          docker push "$OUTPUT"
          OUTPUT="$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:latest"
          docker tag "$INPUT" "$OUTPUT"
          docker push "$OUTPUT"


  kube-bootstrap:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v15
        with:
          name: batteries-included
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush:
            ${{ !(github.ref == 'refs/heads/master' && github.event_name ==
            'push') }}
      - name: Run the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v7
      - run: nix build .#kube-bootstrap -L
      - run: nix build .#kube-bootstrap-container -L
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ env.ECR_ROLE }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      - name: Push image to ECR
        if: ${{ (github.ref == 'refs/heads/master' && github.event_name == 'push') }}
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: kube-bootstrap
        run: |
          docker load < ./result
          TAG=$(docker images "$REPOSITORY" --format '{{ .Tag }}')
          INPUT="$REPOSITORY:$TAG"
          OUTPUT="$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$TAG"
          docker tag "$INPUT" "$OUTPUT"
          docker push "$OUTPUT"
          OUTPUT="$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:latest"
          docker tag "$INPUT" "$OUTPUT"
          docker push "$OUTPUT"

  home-base:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v15
        with:
          name: batteries-included
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush:
            ${{ !(github.ref == 'refs/heads/master' && github.event_name ==
            'push') }}
      - name: Run the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v7
      - run: nix build .#home-base -L
      - run: nix build .#home-base-container -L
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ env.ECR_ROLE }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      - name: Push image to ECR
        if: ${{ (github.ref == 'refs/heads/master' && github.event_name == 'push') }}
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: home-base
        run: |
          docker load < ./result
          TAG=$(docker images "$REPOSITORY" --format '{{ .Tag }}')
          INPUT="$REPOSITORY:$TAG"
          OUTPUT="$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$TAG"
          docker tag "$INPUT" "$OUTPUT"
          docker push "$OUTPUT"

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v15
        with:
          name: batteries-included
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush:
            ${{ !(github.ref == 'refs/heads/master' && github.event_name ==
            'push') }}
      - name: Run the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v7
      - run: nix flake check
